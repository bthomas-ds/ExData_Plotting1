# newdata <- mtcars[order(mpg, -cyl ),]
neworder <- dt[order(-rankingGDP),]
neworder[13]
library(dplyr)
library(data.table)
# url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
# download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
# newdata <- mtcars[order(mpg, -cyl ),]
dt2 <- select(dt, CountryCode, rankingGDP, Long.Name.X)
neworder <- dt2[order(-rankingGDP),]
neworder[13]
View(dt)
library(dplyr)
library(data.table)
# url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
# download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
# newdata <- mtcars[order(mpg, -cyl ),]
dt2 <- select(dt, CountryCode, rankingGDP, Long.Name.x)
neworder <- dt2[order(-rankingGDP),]
neworder[13]
View(dt2)
View(neworder)
View(dt2)
View(dt)
View(dt2)
library(dplyr)
library(data.table)
# url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
# download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
# newdata <- mtcars[order(mpg, -cyl ),]
dt2 <- select(dt, CountryCode, rankingGDP, Long.Name.x)
neworder <- dt2[order(-rankingGDP),]
neworder[13]
#
dt[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
library(dplyr)
library(data.table)
# url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
# download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
# newdata <- mtcars[order(mpg, -cyl ),]
dt2 <- select(dt, CountryCode, rankingGDP, Long.Name.x)
neworder <- dt2[order(-rankingGDP),]
neworder[13]
# mean of income.group
dt[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
# quesiton 5
breaks <- quantile(dt$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
dt$quantileGDP <- cut(dt$rankingGDP, breaks = breaks)
dt[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
R.version.string
swirl()
library(swirl)
rm(list = ls())
swirl()
remove.packages(swirl)
swirl()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
library(swirl)
swirl()
reset()
swirl()
reset()
delete_progress(Brian)
View(by_package)
View(by_package)
View(cran)
View(mydf)
library(sqldf)
library(swirl)
rm(list = ls())
swirl()
hlp()
swirl()
library(swirl)
rm(list = ls())
swir()
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(("dplyr"))
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl" )
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(C(3, 5, NA, 10))
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- arrange(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip+id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, by_package_mean = mean(size))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit
submit()
libray(tidyr)
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
submit()
View(students2)
View(students2)
View(students2)
submit()
submit()
students3
View(students3)
submit()
submit()
submit()
submit()
?spread
submit()
extract_numeric("class5")
submit()
submit()
View(students4)
students4
submit
submit()
submit()
submit()
submit()
submit()
View(passed)
View(failed)
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
bind_rows(passed, failed)
View(sat)
sat
submit()
submit()
Sys.getlocale()
Sys.getlocale("LC_TIME"
)
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_momemnt <- now()
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
month("March 12, 1975")
ymd("March 12, 1975")
mdy("March 12, 1975")
ymd(25081985)
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(hours = 12, minutes =31)
update(this_moment, hours = 12, minutes =31)
update(this_moment, hours = 12, minutes =31, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 12, minutes = 32, seconds = 0)
this_moment <- update(this_moment, hours = 12, minutes = 32, seconds = 0)
this_moment
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- update(depart, hours = depart$hours + 15, minutes = depart$minutes + 50)
arrive <- update(depart, hours = depart.hours + 15, minutes = depart$minutes + 50)
arrive <- update(this_moment, hours = 15, minutes = 50, seconds = 0)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- arrive - with_tz(mdy("June 17, 2008"), tzone = "Singapore")
last_time <- arrive - mdy("June 17, 2008"), tz = "Singapore")
last_time <- arrive - mdy("June 17, 2008", tz = "Singapore")
last_time <- arrive - mdy("June 17, 2008", tz = "Singapore")
last_time <- arrive - mdy("June 17, 2008", tz = "Singapore")
last_time <- now() - mdy("June 17, 2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
? new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
packageVersion("Swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
dataFile <- "subset_2007.txt"
shell_str <- "grep '^2/2/2007\|^1/2/2007' household_power_consumption.txt > subset_2007_2.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataFile <- "subset_2007.txt"
shell_str <- "grep '^2/2/2007\\|^1/2/2007' household_power_consumption.txt > subset_2007_2.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataFile <- "subset_2007.txt"
shell_str <- "grep '^2/2/2007\\|^1/2/2007' household_power_consumption.txt > subset_2007.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
names(data) <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
subSetData <- data[data$Date %ein% c("1/2/2007","2/2/2007") ,]
dataFile <- "subset_2007.txt"
shell_str <- "grep '^2/2/2007\\|^1/2/2007' household_power_consumption.txt > subset_2007.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
setwd("~/Coursera_Exploratory_Data_Analysis/Week1")
dataFile <- "subset_2007.txt"
shell_str <- "grep '^2/2/2007\\|^1/2/2007' household_power_consumption.txt > subset_2007.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
names(data) <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
subSetData <- data[data$Date %ein% c("1/2/2007","2/2/2007") ,]
dim(subSetData)
dir()
dir()
setwd("~/Coursera_Exploratory_Data_Analysis/Week1")
dataFile <- "subset_2007.txt"
shell_str <- "grep '^2/2/2007\\|^1/2/2007' household_power_consumption.txt > subset_2007.txt"
system(shell_str)
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
names(data) <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
subSetData <- data[data$Date %ein% c("1/2/2007","2/2/2007") ,]
dim(subSetData)
data <- read.table(dataFile, header = TRUE, sep = ";", stringsAsFactors = FALSE, dec=".")
dim(data)
subSetData <- data[data$Date %ein% c("1/2/2007","2/2/2007") ,]
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
dim(subSetData)
View(subSetData)
names(data)
names(data) <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
View(data)
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
View(subSetData)
# B. Thomas
# Exploratory Data Analysis - Week 1
# Set working directory to Week 1
setwd("~/Coursera_Exploratory_Data_Analysis/Week1")
# Clear the environment
rm(list = ls())
if (!file.exists("subset_2007.txt")) {
remoteFile <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
localFile <- "household_power_consumption.zip"
download.file(remoteFile, localFile, method="curl")
unzip("household_power_consumption.zip", overwrite = TRUE)
# grep or awk can be used to filter large text files into small subsets
# the grep command below uses a regular expression to create a smaller subset
system("grep '^2/2/2007\|^1/2/2007' household_power_consumption.txt > subset_2007.txt", ignore.stderr = FALSE)
}
# dataFile <- "subset_2007.txt"
# shell_str <- "grep '^2/2/2007\\|^1/2/2007' household_power_consumption.txt > subset_2007.txt"
# system(shell_str)
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
names(data) <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
dim(subSetData)
#str(subSetData)
globalActivePower <- as.numeric(subSetData$Global_active_power)
png("plot1.png", width=480, height=480)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
setwd("~/Coursera_Exploratory_Data_Analysis/Week1")
# Clear the environment
rm(list = ls())
if (!file.exists("subset_2007.txt")) {
remoteFile <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
localFile <- "household_power_consumption.zip"
download.file(remoteFile, localFile, method="curl")
unzip("household_power_consumption.zip", overwrite = TRUE)
# grep or awk can be used to filter large text files into small subsets
# the grep command below uses a regular expression to create a smaller subset
system("grep '^2/2/2007\|^1/2/2007' household_power_consumption.txt > subset_2007.txt", ignore.stderr = FALSE)
}
if (!file.exists("subset_2007.txt")) {
remoteFile <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
localFile <- "household_power_consumption.zip"
download.file(remoteFile, localFile, method="curl")
unzip("household_power_consumption.zip", overwrite = TRUE)
# grep or awk can be used to filter large text files into small subsets
# the grep command below uses a regular expression to create a smaller subset
# extra \ is needed in R to escape the escape charater
system("grep '^2/2/2007\\|^1/2/2007' household_power_consumption.txt > subset_2007.txt", ignore.stderr = FALSE)
}
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
names(data) <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
dim(subSetData)
dataFile <- "subset_2007.txt"
# shell_str <- "grep '^2/2/2007\\|^1/2/2007' household_power_consumption.txt > subset_2007.txt"
# system(shell_str)
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
names(data) <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
dim(subSetData)
globalActivePower <- as.numeric(subSetData$Global_active_power)
png("plot1.png", width=480, height=480)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
# change to Github repository
setwd("./ExData_Plotting1/")
globalActivePower <- as.numeric(subSetData$Global_active_power)
png("plot1.png", width=480, height=480)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
setwd("~/Coursera_Exploratory_Data_Analysis/Week1")
# Clear the environment
rm(list = ls())
# datafile has been subsetting during plot1.R - resuse the subsetted file
dataFile <- "subset_2007.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
names(data) <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
dim(subSetData)
str(subSetData)
# change to Github repository
setwd("./ExData_Plotting1/")
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subSetData$Global_active_power)
png("plot2.png", width=480, height=480)
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
# B. Thomas
# Exploratory Data Analysis
# plot3.R
# data file was subsetted as part of plot1.R
setwd("~/Coursera_Exploratory_Data_Analysis/Week1")
# Clear the environment
rm(list = ls())
# datafile has been subsetting during plot1.R - resuse the subsetted file
dataFile <- "subset_2007.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
names(data) <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
dim(subSetData)
# change to Github repository
setwd("./ExData_Plotting1/")
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subSetData$Global_active_power)
subMetering1 <- as.numeric(subSetData$Sub_metering_1)
subMetering2 <- as.numeric(subSetData$Sub_metering_2)
subMetering3 <- as.numeric(subSetData$Sub_metering_3)
png("plot3.png", width=480, height=480)
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
dev.off()
# B. Thomas
# Exploratory Data Analysis
# plot4.R
# data file was subsetted as part of plot1.R
setwd("~/Coursera_Exploratory_Data_Analysis/Week1")
# Clear the environment
rm(list = ls())
# datafile has been subsetting during plot1.R - resuse the subsetted file
dataFile <- "subset_2007.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
names(data) <- c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
dim(subSetData)
# change to Github repository
setwd("./ExData_Plotting1/")
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subSetData$Global_active_power)
globalReactivePower <- as.numeric(subSetData$Global_reactive_power)
voltage <- as.numeric(subSetData$Voltage)
subMetering1 <- as.numeric(subSetData$Sub_metering_1)
subMetering2 <- as.numeric(subSetData$Sub_metering_2)
subMetering3 <- as.numeric(subSetData$Sub_metering_3)
png("plot4.png", width=480, height=480)
par(mfrow = c(2, 2))
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power", cex=0.2)
plot(datetime, voltage, type="l", xlab="datetime", ylab="Voltage")
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
plot(datetime, globalReactivePower, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
